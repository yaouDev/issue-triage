name: Issue Triage

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  issues:
    types: [opened, reopened]

permissions:
        issues: write
        pull-requests: write
        repository-projects: read
        contents: read

jobs:
  triage:
    runs-on: ubuntu-latest
    permissions:
        issues: write
        pull-requests: write
        repository-projects: read
        contents: read
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Debug GITHUB_TOKEN permissions
        run: |
            curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/permissions/workflow

      - name: Triage all untriaged issues (manual dispatch only)
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "Fetching untriaged issues (no labels, no assignees)..."
          issues=$(gh issue list --state open --json number,labels,assignees --jq '.[] | select((.labels | length) == 0 and (.assignees | length) == 0) | .number')

          for issue in $issues; do
            echo "Triggering triage for issue #$issue"
            gh issue comment "$issue" --body "Running triage..."
          done

    
      - name: Advanced Issue Triage
        uses: yaouDev/issue-triage@main
        with:
          stale-days: '30'
          close-days: '7'
          stale-message: 'This issue is stale because it has been open for {{ stale-days }} days with no activity. Remove the stale label or comment, otherwise this issue will be closed in {{ close-days }} days.'
          close-message: 'This issue was closed because it has been inactive for a long time. Please reopen if this issue is still relevant.'
          assignment-rules: |
            [
              {
                "keywords": "bug,error,crash",
                "assignees": "yaouDev"
              },
              {
                "keywords": "feature,enhancement",
                "assignees": "yaouDev"
              },
              {
                "keywords": "documentation,docs",
                "assignees": "yaouDev"
              }
            ]
          default-assignee: 'yaouDev'
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
